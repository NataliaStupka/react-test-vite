//components
import Articles from './Articles/Articles';
import Loader from './Loader.jsx/Loader';
import SearchBar from './SearchBar/SearchBar';

import { useEffect, useState } from 'react';

import { fetchArticles } from '../services/api'; //–∑–∞–ø–∏—Ç
import toast from 'react-hot-toast'; //—Ç–æ—Å—Ç–µ—Ä(–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è)

//fetch —Ä–æ–±–∏–º–æ –≤ useEffect, –∑–∞–º—ñ—Å—Ç—å fetch –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ axios (resp.data.)
const App = () => {
  const [articles, setArticles] = useState([]); //—Å—Ç–∞—Ç—Ç—ñ
  const [isLoading, setIsLoading] = useState(false); //Loader(–∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—á)
  const [isError, setIsError] = useState(false); //–ø–æ–º–∏–ª–∫–∞
  const [query, setQuery] = useState('react'); //–ø–æ–ª–µ –≤–≤–æ–¥—É –ø–æ—à—É–∫—É
  const [page, setPage] = useState(0); //—Å—Ç–æ—Ä—ñ–Ω–∫–∞
  const [nbPages, setNbPage] = useState(0); //–≤—Å–æ–≥–æ —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –ø—Ä–∏–π—à–ª–æ –∑ –±–µ–∫–µ–Ω–¥—É

  //Toster –ø—Ä–∏ nbPages === page
  useEffect(() => {
    if (nbPages === page) {
      toast.success('You already download all posts!ü¶ä');
    }
  }, [nbPages, page]);

  useEffect(() => {
    //—Å—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é getData
    const getData = async () => {
      try {
        setIsLoading(true);
        //–æ–±–Ω—É–ª—è—î–º–æ –≤—Å–µ –ø—Ä–∏ –Ω–æ–≤–æ–º—É –∑–∞–ø–∏—Ç—ñ
        setIsError(false);

        //–¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è              –ø–µ—Ä–µ–¥–∞—î–º–æ –∑–∞–Ω—á–µ–Ω–Ω—è —ñ —Å—Ç–æ—Ä—ñ–Ω–∫—É
        const { hits, nbPages } = await fetchArticles(query, page); //–ø—Ä–∏—Ö–æ–¥–∏—Ç—å data
        setNbPage(nbPages);
        setArticles(prev => [...prev, ...hits]); // –∑–∞–ø–∏—Å–∞–ª–∏ –≤ articles —Ç–µ —â–æ –ø—Ä–∏–π—à–ª–æ (—ñ —Ç–µ —â–æ –±—É–ª–æ –¥–æ —Ü—å–æ–≥–æ(load more))
      } catch (error) {
        setIsError(true);

        console.log(error);
      } finally {
        setIsLoading(false);
      }
    };

    getData();
  }, [query, page]);

  //–∑–º—ñ–Ω—é—î –Ω–∞—à input
  //–ø—Ä–∏—Ö–æ–¥–∏—Ç—å –Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
  const handleChangeQuery = query => {
    setArticles([]); // –æ—á–∏—â–∞—î –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ —Å—Ç–∞—Ç—Ç—ñ –ø—Ä–∏ –Ω–æ–≤–æ–º—É –∑–∞–ø–∏—Ç—ñ
    setQuery(query);
    setPage(0);
    toast.error(' üê£ Query changed ');
  };

  return (
    <div>
      <h1>HTTP –∑–∞–ø–∏—Ç, Axios, async/await, pagination</h1>

      <SearchBar onChangeQuery={handleChangeQuery} />
      {/* —è–∫—â–æ —î —â–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ */}
      {nbPages > page && (
        <button onClick={() => setPage(prev => prev + 1)}>
          Load more: {page}
        </button>
      )}

      {/* —è–∫—â–æ true —Ç–æ –ø–æ–∫–∞–∑—É—î –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—á */}
      {isLoading && <Loader />}
      <Articles articles={articles} />
      {isError && <h2>–©–æ—Å—å —Å—Ç–∞–ª–æ—Å—å! –û–Ω–æ–≤–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∞–±–æ —Å–ø—Ä–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.</h2>}
    </div>
  );
};

export default App;

// –∑–∞–º—ñ–Ω–∏–ª–∏ –Ω–∞ async/await
// useEffect(() => {
//   axios
//     .get('http://hn.algolia.com/api/v1/search?query=react')
//     .then(resp => setArticles(resp.data.hits));
// }, []);
